{"version":3,"file":"static/js/923.fffaf45e.chunk.js","mappings":"yLAEaA,EAAkBC,EAAAA,KAAaC,MAAM,CAC9CC,MAAOF,EAAAA,KACFE,QACLC,SAAUH,EAAAA,KACLI,IAAI,EAAG,oCACPC,SAAS,cAELC,EAAiBN,EAAAA,KAAaC,MAAM,CAC7CM,KAAMP,EAAAA,KAEDI,IAAI,EAAG,oCAEPI,IAAI,GAAI,sCACRH,SAAS,e,wEC6BlB,IAvCiB,SAACI,GAEd,OACI,0BACK,SAAC,KAAD,CACGC,cAAe,CACXH,KAAM,IAEVI,SAAU,SAAAC,GACN,IAAMC,EAAS,GAIf,OAHKD,EAAOL,OACRM,EAAON,KAAO,wBAEXM,GAEXC,SAAU,SAACF,EAAD,GAA0B,IAAhBG,EAAe,EAAfA,UAChBN,EAAMO,SAASJ,GACfG,EAAU,CAACH,OAAQ,MAEvBK,iBAAkBX,EAAAA,EAfrB,SAiBI,kBACG,UAAC,KAAD,YACI,0BACI,SAAC,KAAD,CAAOY,UAAW,WACXC,KAAM,OACNC,YAAa,oBAExB,SAAC,KAAD,CAAcC,UAAWC,EAAAA,EAAAA,MACXH,KAAM,OACND,UAAW,SACzB,mBAAQK,KAAM,SAAd,gC,sKCnCxB,EAA8B,iCAA9B,EAA6E,iC,SCCvEC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAkBD,OAlBCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACFC,MAAQ,CACJC,UAAU,EACVC,OAAQ,EAAKlB,MAAMkB,QAFf,EAKRC,iBAAmB,WACf,EAAKC,SAAS,CAACH,UAAU,KAC5B,EAEDI,mBAAqB,WACjB,EAAKD,SAAS,CAACH,UAAU,IACzB,EAAKjB,MAAMsB,aAAa,EAAKN,MAAME,SACtC,EACDK,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVF,OAAQM,EAAEC,cAAcC,SAE/B,EA4BA,OA5BA,0CAED,SAAmBC,EAAWC,EAAWC,GACjCF,EAAUT,SAAWY,KAAK9B,MAAMkB,QAChCY,KAAKV,SAAS,CAACF,OAAQY,KAAK9B,MAAMkB,WAEzC,oBAED,WAEI,OACI,4BAESY,KAAKd,MAAMC,WACZ,gBAAKc,MAAO,CAACC,WAAY,GAAIC,SAAU,GAAIC,MAAO,QAASC,UAAW,UAAtE,UACI,iBAAMC,cAAeN,KAAKX,iBAA1B,SAA6CW,KAAK9B,MAAMkB,QAAU,gBAItEY,KAAKd,MAAMC,WAAY,0BACnB,kBAAOoB,SAAUP,KAAKP,eACfe,WAAW,EACXC,OAAQT,KAAKT,mBACbK,MAAOI,KAAKd,MAAME,kBAK5C,EA9CCH,CAAsByB,EAAAA,WAiD5B,IC/CaC,EAAc,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASxB,EAA0B,EAA1BA,OAAQI,EAAkB,EAAlBA,aAE1C,OACI,iBAAKV,UAAWC,EAAhB,WACK,0BACG,gBACI8B,IAAI,+FACJC,IAAK,kBAGb,iBAAMhC,UAAWC,EAAjB,UACI,gBACI8B,IAAKD,EAAQG,OAAOC,MAAOF,IAAK,gBAExC,SAAC,EAAD,CAAe1B,OAAQA,EACRI,aAAcA,KAC7B,gBAAKV,UAAWC,EAAhB,UACI,+BAAO,SAAgB6B,EAAQK,eAEnC,gBAAKnC,UAAWC,EAAhB,SACK,aAAoB6B,EAAQM,SAASC,MAE1C,gBAAKrC,UAAWC,EAAhB,SACK,YAAmB6B,EAAQQ,c,oBC1B5C,EAAuB,mBAAvB,EAAgD,kBCEnCC,EAAO,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,GAAIC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAE3C,OACI,+BACI,iBAAK3C,UAAWC,EAAhB,WACI,gBAAK8B,IAAK,4FACLC,IAAK,KACTU,GACD,mBAAQ1C,UAAWC,EAAa2C,QAAS,kBAAMH,EAAWD,IAA1D,gBACA,4BACI,qCACCG,W,oBCORE,GAAmBC,EAAAA,EAAAA,KAjBV,SAAC1C,GACnB,MAAO,CACH2C,SAAU3C,EAAM4C,YAAYD,SAC5BE,OAAQ7C,EAAM8C,KAAKD,WAGF,SAACE,GACtB,MAAO,CACHC,QAAS,SAAClE,GACNiE,GAASE,EAAAA,EAAAA,IAAqBnE,KAElCuD,WAAY,SAACD,GACTW,GAASV,EAAAA,EAAAA,IAAWD,QAKAM,EChBT,SAAC1D,GACpB,IAGIqD,EAAa,SAACD,GACbpD,EAAMqD,WAAWD,IAGlBc,EAAclE,EAAM2D,SACnBQ,KAAI,SAACC,EAAGC,GAAJ,OACD,SAAClB,EAAD,CAAcC,GAAIgB,EAAEhB,GACdC,WAAcA,EACdC,QAASc,EAAEd,QACXC,MAAOa,EAAEE,WAHJD,MAInB,OAAIrE,EAAM6D,QAEF,iBAAKjD,UAAWC,EAAAA,EAAAA,WAAhB,WACI,sCACA,SAAC0D,EAAA,EAAD,CAAUhE,SAjBN,SAACJ,GACbH,EAAMgE,QAAQ7D,EAAOL,UAkBb,gBAAKc,UAAWC,EAAAA,EAAAA,MAAhB,SACKqD,QAKV,sBC3BEM,EAAU,SAAC,GAAqC,IAApC9B,EAAmC,EAAnCA,QAASxB,EAA0B,EAA1BA,OAAQI,EAAkB,EAAlBA,aACtC,OAAKoB,GAOD,4BACI,SAACD,EAAD,CAAaC,QAAWA,EACXxB,OAAQA,EACRI,aAAgBA,KAC7B,SAACmC,EAAD,QAVG,0BACH,gBACId,IAAI,+FAA+FC,IAAK,kB,oBCD3G6B,EAAkB,SAACC,GAM5B,OAJkB,SAAC1E,GACf,IAAM2E,GAAQC,EAAAA,EAAAA,IAAS,qBACvB,OAAO,SAACF,GAAD,kBAAe1E,GAAf,IAAsB2E,MAAOA,OAKtCE,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAoBD,OApBCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MAEF,WACI,IAAIC,EAAShD,KAAK9B,MAAM2E,MAClB7C,KAAK9B,MAAM2E,MAAMI,OAAOD,OACxBhD,KAAK9B,MAAMgF,KACbF,IACAhD,KAAK9B,MAAMiF,WAAWH,GACtBhD,KAAK9B,MAAMkF,UAAUJ,MAE5B,oBAED,WACI,OACI,SAACN,GAAD,kBAAa1C,KAAK9B,OAAlB,IACS0C,QAASZ,KAAK9B,MAAM0C,QACpBxB,OAAQY,KAAK9B,MAAMkB,OACnBI,aAAcQ,KAAK9B,MAAMsB,oBAGzC,EApBCuD,CAAyBrC,EAAAA,WA+B/B,GAAe2C,EAAAA,EAAAA,KACXzB,EAAAA,EAAAA,KATkB,SAAC1C,GAAD,MAAY,CAC1B0B,QAAS1B,EAAM4C,YAAYlB,QAC3BxB,OAAQF,EAAM4C,YAAY1C,OAC1B8D,KAAMhE,EAAM8C,KAAKgB,OACjBjB,OAAQ7C,EAAM8C,KAAKD,UAKE,CAACoB,WAAAA,EAAAA,GAAYC,UAAAA,EAAAA,GAAW5D,aAAAA,EAAAA,KACjDmD,EAFJ,CAICI,I,mBClDD,KAAgB,WAAa,4BAA4B,MAAQ,uBAAuB,MAAQ","sources":["components/FormValidation/formSchema.js","components/Form/PostForm.jsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b"],"sourcesContent":["import * as Yup from \"yup\";\r\n\r\nexport const loginFormSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email(),\r\n    password: Yup.string()\r\n        .min(4, \"Must be longer than 8 characters\")\r\n        .required(\"Required\")\r\n})\r\nexport const postFormSchema = Yup.object().shape({\r\n    text: Yup.string()\r\n        //минимальная длина - 2 символа\r\n        .min(2, \"Must be longer than 2 characters\")\r\n        //максимальная длина - 20 символов\r\n        .max(50, \"Must be shorter than 50 characters\")\r\n        .required(\"Required\")\r\n})","import React from 'react';\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport classes from \"../Profile/MyPosts/MyPosts.module.css\";\r\nimport {postFormSchema} from \"../FormValidation/formSchema\";\r\n\r\nconst PostForm = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {<Formik\r\n                initialValues={{\r\n                    text: \"\"\r\n                }}\r\n                validate={values => {\r\n                    const errors = {};\r\n                    if (!values.text) {\r\n                        errors.text = 'Enter your post text'\r\n                    }\r\n                    return errors;\r\n                }}\r\n                onSubmit={(values, {resetForm}) => {\r\n                    props.callback(values)\r\n                    resetForm({values: \"\"})\r\n                }}\r\n                validationSchema={postFormSchema}\r\n            >\r\n                {() => (\r\n                    <Form>\r\n                        <div>\r\n                            <Field component={\"textarea\"}\r\n                                   name={'text'}\r\n                                   placeholder={'write a post'}/>\r\n                        </div>\r\n                        <ErrorMessage className={classes.error}\r\n                                      name={\"text\"}\r\n                                      component={\"div\"}/>\r\n                        <button type={'submit'}>Add post</button>\r\n                    </Form>\r\n                )}\r\n            </Formik>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostForm;","// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__vKhrE\",\"description\":\"ProfileInfo_description__oZAN2\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true})\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({editMode: false})\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    !this.state.editMode &&\r\n                    <div style={{marginLeft: 10, fontSize: 30, color: \"green\", fontStyle: \"italic\"}}>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"no status\"}</span>\r\n                    </div>\r\n                }\r\n                {\r\n                    this.state.editMode && <div>\r\n                        <input onChange={this.onStatusChange}\r\n                               autoFocus={true}\r\n                               onBlur={this.deactivateEditMode}\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\"\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nexport const ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    return (\r\n        <div className={classes.profileInfo}>\r\n            {<div>\r\n                <img\r\n                    src=\"https://cdn-prod.medicalnewstoday.com/content/images/articles/325/325466/man-walking-dog.jpg\"\r\n                    alt={\"profileImg\"}/>\r\n            </div>}\r\n\r\n            <span className={classes.description}>\r\n                <img\r\n                    src={profile.photos.small} alt={\"no photo\"}/>\r\n            </span>\r\n            <ProfileStatus status={status}\r\n                           updateStatus={updateStatus}/>\r\n            <div className={classes.description}>\r\n                <h3>  {\"Name:\" + \" \" + profile.fullName}</h3>\r\n            </div>\r\n            <div className={classes.description}>\r\n                {\"contacts:\" + \" \" + profile.contacts.vk}\r\n            </div>\r\n            <div className={classes.description}>\r\n                {\"aboutMe:\" + \" \" + profile.aboutMe}\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__UC4MU\",\"btn\":\"Post_btn__u74hK\"};","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nexport const Post = ({id, deletePost, message, likes}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.item}>\r\n                <img src={\"https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg\"}\r\n                     alt={11}/>\r\n                {message}\r\n                <button className={classes.btn} onClick={() => deletePost(id)}>x</button>\r\n                <div>\r\n                    <span>Likes:</span>\r\n                    {likes}\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","import {addPostActionCreator, deletePost} from \"../../../redux/profile-reducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => {\r\n            dispatch(addPostActionCreator(text))\r\n        },\r\n        deletePost: (id)=>{\r\n            dispatch(deletePost(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\nimport PostForm from \"../../Form/PostForm\";\r\n\r\nexport const MyPosts = (props) => {\r\n    let addMyPost = (values) => {\r\n        props.addPost(values.text)\r\n    }\r\n    let deletePost = (id) => {\r\n         props.deletePost(id)\r\n    }\r\n\r\n    let postElement = props.postData\r\n        .map((p, i) =>\r\n            <Post key={i} id={p.id}\r\n                  deletePost = {deletePost}\r\n                  message={p.message}\r\n                  likes={p.likeCount}/>)\r\n    if (props.isAuth) {\r\n        return (\r\n            <div className={classes.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <PostForm callback={addMyPost}\r\n                />\r\n                <div className={classes.posts}>\r\n                    {postElement}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return <div></div>\r\n}","import React from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\n\r\nexport const Profile = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <div>\r\n            <img\r\n                src=\"https://cdn-prod.medicalnewstoday.com/content/images/articles/325/325466/man-walking-dog.jpg\" alt={\"profileImg\"}/>\r\n        </div>\r\n    }\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile = {profile}\r\n                         status={status}\r\n                         updateStatus = {updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {useMatch} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nexport const ProfileURLMatch = (Component) => {\r\n    let RouterComponent;\r\n    RouterComponent = (props) => {\r\n        const match = useMatch('/profile/:userId/');\r\n        return <Component {...props} match={match}/>;\r\n    };\r\n    return RouterComponent\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match\r\n            ? this.props.match.params.userId\r\n            : this.props.meId\r\n        if (userId) {\r\n            this.props.getProfile(userId)\r\n            this.props.getStatus(userId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        meId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    ProfileURLMatch,\r\n    /* withAuthRedirect*/)\r\n(ProfileContainer)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__+4lAR\",\"posts\":\"MyPosts_posts__3D7nG\",\"error\":\"MyPosts_error__1k-9Y\"};"],"names":["loginFormSchema","Yup","shape","email","password","min","required","postFormSchema","text","max","props","initialValues","validate","values","errors","onSubmit","resetForm","callback","validationSchema","component","name","placeholder","className","classes","type","ProfileStatus","state","editMode","status","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","snapshot","this","style","marginLeft","fontSize","color","fontStyle","onDoubleClick","onChange","autoFocus","onBlur","React","ProfileInfo","profile","src","alt","photos","small","fullName","contacts","vk","aboutMe","Post","id","deletePost","message","likes","onClick","MyPostsContainer","connect","postData","profilePage","isAuth","auth","dispatch","addPost","addPostActionCreator","postElement","map","p","i","likeCount","PostForm","Profile","ProfileURLMatch","Component","match","useMatch","ProfileContainer","userId","params","meId","getProfile","getStatus","compose"],"sourceRoot":""}